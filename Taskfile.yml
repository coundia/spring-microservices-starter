version: '3'
tasks:
  build:
    desc: Build the Spring Boot application
    cmds:
      - ./mvnw clean package -DskipTests
    sources:
      - "src/**/*.java"
    generates:
      - "target/*.jar"

  start:
    desc: Run the Spring Boot application services individually
    cmds:
      - cd cloud-config-server && mvn spring-boot:run > ../cloud-config-server.log 2>&1 &
      - cd eureka && mvn spring-boot:run > ../eureka.log 2>&1 &
      - cd gateway-server && mvn spring-boot:run > ../gateway-server.log 2>&1 &
      - cd products-command && mvn spring-boot:run > ../products-command.log 2>&1 &
      - cd products-query && mvn spring-boot:run > ../products-query.log 2>&1 &
    interactive: false

  stop:
    desc: Stop apps
    cmds:
      - sh kill.ports.sh 8761 8080 8081 8090 8091

  check:
    desc: Check severs
    cmds:
      - curl -i http://127.0.0.1:8090/actuator/health
      - curl -i http://127.0.0.1:8761/actuator/health
      - curl -i http://127.0.0.1:8080/actuator/health
      - curl -i http://127.0.0.1:8090/actuator/health
      - curl -i http://127.0.0.1:8091/actuator/health

  serve:
    desc: Run all services using Docker Compose
    cmds:
      - docker compose -f docker/main.yml up -d
    interactive: true

  test:
    desc: Run unit and integration tests
    cmds:
      - mvn test
    sources:
      - "src/**/*.java"
    generates:
      - "target/surefire-reports"

  clean:
    desc: Clean build artifacts
    cmds:
      - ./mvnw clean
    generates:
      - "target/"

  format:
    desc: Format Java code using Spotless
    cmds:
      - ./mvnw spotless:apply
    sources:
      - "src/**/*.java"

  lint:
    desc: Check Java code formatting using Checkstyle
    cmds:
      - ./mvnw checkstyle:check

  dependencies:
    desc: Check for updated project dependencies
    cmds:
      - ./mvnw versions:display-dependency-updates
      - ./mvnw versions:display-plugin-updates

  docker-build:
    desc: Build a Docker image for the application
    cmds:
      - docker build -t pcoundia .
      - docker compose -f docker/main.yml up -d --build
    sources:
      - "Dockerfile"
      - "src/**"
    generates:
      - "target/*.jar"
